#
# commands.properties
#
# Created on 31. August 2008, 00:22
# 
#  Strings for the commands.
#
# -----------------------------------------------------------------------------
#  Modification History:
#
#   2008-08-31
#       File created - A. Brandt:
#       Initial version of the command resource.
#
#       File under GPL - see OpenSimKit Documentation.
#
#       No warranty and liability for correctness by author.
#
# Generic strings:
.commandSuccessful = Command successful: "%s".
.error.wrongNumberOfParameters = Error: %s parameters found, but 0 expected!
.error.arrayIndexOutOfBounds = Error: Array index (%s) is out of bounds!
.error.fieldIsNotAManipulatable = Error: %s
.error.illegalArgument = Error: %s
.error.unknownInstance = Error: The instance "%s" is unknown!
.error.noSuchField = Error: The field "%s" does not exist in class "%s"!
.error.noSuchMethod = Error: The method "%s" does not exist in class "%s"!
.error.wrongState = The simulator is in the wrong state for this command. \
    It can only be executed when the simulator is not running!
# Command specific strings.
CALL.shortDescription = Calls a callable method inside the simulator.
CALL.longDescription = call <instance> <method>\
    %n%nCalls a callable method inside the simulator. Currently only \
    parameterless methods are supported.\
    %n%n<instance> is the name of the model instance you want to adress \
    (in case a class is instantiated more than once). It is case sensitive. \
    Use the help command to get a list of all available manipulatable \
    variables.\
    %n%n<method> is the name of the method of the instance of which \
    you would like to execute. It is case sensitive.\
    %n%nExamples:\
    %ncall c0 init
CALL.error.wrongNumberOfParameters = Error: %s parameters found, but 2 expected!
CALL.error.methodIsNotCallable = Error: Method "%s" of class "%s" is not \
    annotated with @Callable!
CALL.commandSuccessful = "Command successful ("%s"): %s.%s() == %s.
DISCONNECT.shortDescription = Disconnects the MMI from the simulator.
DISCONNECT.longDescription = disconnect\
    %n%nDisconnects the MMI from the simulator.
GET.shortDescription = Gets a manipulatable variable inside the simulator.
GET.longDescription = get <instance> <field>\
    %n%nReturns the value of a manipulatable variable.\
    %n%n<instance> is the name of the model instance you want to adress \
    (in case a class is instantiated more than once). It is case sensitive. \
    Use the help command to get a list of all available manipulatable \
    variables.\
    %n%n<field> is the name of the member variable of the instance of which \
    you would like to get its value. It is case sensitive.\
    %n%nExamples:\
    %nget c0 mass
GET.error.wrongNumberOfParameters = Error: %s parameters found, but 2 expected!
GET.commandSuccessful = Command successful ("%s"): %s.%s == "%s".
GETA.shortDescription = Returns the value of an element of an one-dimensional \
    array.
GETA.longDescription = geta <instance> <field> <position>\
    %n%nReturns the value of an element of an one-dimensional array.\
    %n%n<instance> is the name of the model instance you want to adress \
    (in case a class is instantiated more than once). It is case sensitive. \
    Use the help command to get a list of all available manipulatable \
    variables.\
    %n%n<field> is the name of the member variable of the instance of which \
    you would like to get its value. It is case sensitive.\
    %n%n<position> is the position in the one-dimensional array.\
    %n%nExamples:\
    %ngeta c2 temperatures 0\
    %ngeta c2 temperatures 9\
    %ngeta c2 qHFlow 9
GETA.error.wrongNumberOfParameters = Error: %s parameters found, but 3 expected!
GETA.commandSuccessful = Command successful ("%s"): %s.%s[%s] == "%s".
HELP.shortDescription = Prints information about the commands.
HELP.longDescription = help\
    %nhelp <command name>\
    %nhelp <model name>\
    %nhelp <simulator information>\
    %n%nThe Help Command prints information about the simulator.\
    %n%nhelp: Invoked without any parameter it prints a list of all available \
    commands.\
    %n%nhelp <command name>: Prints a detailed help about the command.\
    %n%nhelp <model name>: Prints detailed information (Manipulatables, \
    Readables, Callables) about the Model.\
    %n%nhelp <simulator information>: Prints specific global simulator \
    information. Possible values are:\
    %nModels:     A list of the names of all Models inside the \
    simulator as well as their type.\
    %nManipulatables: A list of all Manipulatables inside the simulator \
    ordered by classes as well as their type.\
    %nReadables:      A list of all Readables inside the simulator \
    ordered by classes as well as their type.\
    %nCallables:      A list of all Callables inside the simulator \
    ordered by classes.\
    %nVersion:        Prints the version of the simulator.\
    %n%nExamples:\
    %nhelp\
    %nhelp get\
    %nhelp c0\
    %nhelp models\
    %nhelp manipulatables\
    %nhelp readables\
    %nhelp callables\
    %nhelp version
HELP.commandSuccessful = Command successful: "%s".\
    %n%s
HELP.error.unrecognizedParameter = Error: Unrecognized parameter "%s"! Type \
    "help help" for a list of all accepted parameters.
HELP.error.wrongNumberOfParameters = Error: %d parameters found, but 0 or 1 \
    expected!
PAUSE.shortDescription = Pauses the simulator.
PAUSE.longDescription = pause\
    %n%nPauses a running simulation.
PAUSE.error.simulationIsNotRunning = The simulation is not running and can \
    therefore not be paused!
RESUME.shortDescription = Resumes the simulator.
RESUME.longDescription = resume\
    %n%nResumes a stopped simulation. This command is also available as a menu \
    item (File|Resume).
RESUME.error.simulationIsNotPaused = The simulation is not paused and can \
    therefore not be resumed!
RUN.shortDescription = Starts the simulator.
RUN.longDescription = run\
    %n%nStarts a simulation. This command is also available as a \
    menu item (File|Run).
RUN.error.simulationIsAlreadyRunning = The simulation is already running!
SET.shortDescription = Sets a manipulatable variable inside the simulator.
SET.longDescription = set <instance> <field> <value>\
    %n%nSets the value of a manipulatable variable.\
    %n%n<instance> is the name of the model instance you want to adress \
    (in case a class is instantiated more than once). It is case sensitive. \
    Use the help command to get a list of all available manipulatable \
    variables.\
    %n%n<field> is the name of the member variable of the instance of which \
    you would like to get its value. It is case sensitive.\
    %n%n<value> is the value the field should be set to.\
    %n%nExamples:\
    %nset c0 mass 1000\
    %nset c0 fluid test
SET.error.wrongNumberOfParameters = Error: %s parameters found, but 3 expected!
SET.commandSuccessful = Command successful ("%s"): %s.%s = "%s".
SETA.shortDescription = Sets an element of a manipulatable one-dimensional \
    array inside the simulator.
SETA.longDescription = seta <instance> <field> <position> <value>\
    %n%nSets the value of an element of an one-dimensional array.\
    %n%n<instance> is the name of the model instance you want to adress \
    (in case a class is instantiated more than once). It is case sensitive. \
    Use the help command to get a list of all available manipulatable \
    variables.\
    %n%n<field> is the name of the member variable of the instance of which \
    you would like to get its value. It is case sensitive.\
    %n%n<position> is the position in the array.\
    %n%n<value> the value of the element.\
    %n%nExamples:\
    %nseta c2 temperatures 0 300\
    %nseta c2 temperatures 9 -100\
    %nseta c2 qHFlow 9 20
SETA.error.wrongNumberOfParameters = Error: %s parameters found, but 4 expected!
SETA.commandSuccessful = Command successful ("%s"): %s.%s[%s] = "%s".
SHUTDOWN.shortDescription = Stops the simulation and closes the simulator.
SHUTDOWN.longDescription = shutdown\
    %n%nStops the simulation and closes the simulator as well as the MMI. \
    This command is also available as a menu item (File|Shutdown).
SHUTDOWN.commandSuccessful = Command successful ("%s"): "Simulator shutdown \
    invoked by console command...terminating...
STOP.shortDescription = Stops the simulator.
STOP.longDescription = stop\
    %n%nStops a running simulation. This command is also available as a menu \
    item (File|Stop).
STOP.error.simulationIsNotRunning = The simulation is not running and can \
    therefore not be stopped!